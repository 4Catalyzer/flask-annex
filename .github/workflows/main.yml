# Adapted from https://github.com/python-attrs/attrs/blob/main/.github/workflows/main.yml
---
name: CI

on:
  push:
    branches: ["master"]
    tags:
      - "*"
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    env:
      COVERAGE_PYTHON_VERSION: "3.12"

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-python@v5"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade coverage[toml] tox tox-gh-actions
      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: "python -m tox"

      # We always use a modern Python version for combining coverage to prevent
      # parsing errors in older versions for modern code.
      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.12"

      - name: "Generate code coverage"
        if: "contains(env.COVERAGE_PYTHON_VERSION, matrix.python-version)"
        run: |
          set -xe
          python -m coverage xml
      - name: "Upload coverage"
        if: "contains(env.COVERAGE_PYTHON_VERSION, matrix.python-version)"
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        uses: "codecov/codecov-action@v4"
        with:
          fail_ci_if_error: true

  package:
    name: "Build, verify, and publish package"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.12"
      - name: "Install build, check-wheel-content, and twine"
        run: "python -m pip install build twine check-wheel-contents"
      - name: "Build package"
        run: "python -m build --sdist --wheel ."
      - name: "List result"
        run: "ls -l dist"
      - name: "Check wheel contents"
        run: "check-wheel-contents dist/*.whl"
      - name: "Check long_description"
        run: "python -m twine check dist/*"
      # Automatically publish to PyPI when tags are pushed
      # Added to https://github.com/python-attrs/attrs/blob/main/.github/workflows/main.yml
      - name: Publish distribution to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
